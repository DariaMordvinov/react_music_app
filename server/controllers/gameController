const path = require('path');
const request = require('request');
const axios = require('axios');
const qs = require('qs');
const SpotifyWebApi = require('spotify-web-api-node');
const spotifyApi = new SpotifyWebApi();

const Client_ID = "5401259605184f6f8dc49400a84ed63c";
const Client_Secret = "d85737bc73c84b598cfb25bb51c15378";

// authorization with Spotify API
// read docs here: https://developer.spotify.com/documentation/general/guides/authorization/client-credentials/


// making a buffer with client id and secret to send to Spotify in order to get authorization token back
const auth_token = Buffer.from(`${Client_ID}:${Client_Secret}`, 'utf-8').toString('base64');


const gameController = {};

gameController.getOptions = async(req, res, next) => {
    try{
          //make post request to SPOTIFY API for access token, sending relavent info
          const token_url = 'https://accounts.spotify.com/api/token';
      
          // use qs to send credentials in secure way
          const data = qs.stringify({'grant_type':'client_credentials'});
      
          // making request to get back authorization token
          const response = await axios.post(token_url, data, {
            headers: { 
              'Authorization': `Basic ${auth_token}`,
              'Content-Type': 'application/x-www-form-urlencoded' 
            }
          })
          
        const authToken = await response.data.access_token;
        const songs = await axios({
          method: 'get',
          url: "https://api.spotify.com/v1/recommendations?limit=50&market=US&seed_genres=pop,rock&min_popularity=50",
          headers: {
            'Authorization': `Bearer ${authToken}`
          }
        });
        console.log(songs.data.tracks[0].preview_url);
        console.log(authToken);
      
    } catch(error){
        console.log(error);
        next();
    }
    next();
}

module.exports = gameController;